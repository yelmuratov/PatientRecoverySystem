events {}

http {
    gzip on;
    gzip_types text/plain application/javascript text/css application/json application/vnd.api+json;

    upstream api_service {
        server 127.0.0.1:5000;
    }

    upstream notification_service {
        server 127.0.0.1:5001;
    }

    server {
        listen 80;
        server_name curevia.tech www.curevia.tech;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name curevia.tech www.curevia.tech;

        ssl_certificate /etc/letsencrypt/live/curevia.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/curevia.tech/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root /var/www/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        # API Proxy with CORS handling
        location /api/ {
            proxy_pass http://api_service/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Inject CORS headers on all responses
            add_header 'Access-Control-Allow-Origin' 'https://patient-recovery-frontend-2hfn.vercel.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' 'https://patient-recovery-frontend-2hfn.vercel.app' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Access-Control-Max-Age' 86400 always;
                return 204;
            }
        }

        location /swagger/ {
            alias /var/www/html/swagger/;
            index index.html;
        }

        location /notify/ {
            proxy_pass http://notification_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite ^/notify(/.*)$ $1 break;
        }
    }
}
